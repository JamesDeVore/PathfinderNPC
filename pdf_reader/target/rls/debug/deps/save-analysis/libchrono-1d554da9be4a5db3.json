{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0","program":"C:\\Users\\jdevo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","chrono","C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1d554da9be4a5db3","-C","extra-filename=-1d554da9be4a5db3","--out-dir","c:\\Users\\jdevo\\Desktop\\Projects\\PathfinderAI\\pdf_reader\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\jdevo\\Desktop\\Projects\\PathfinderAI\\pdf_reader\\target\\rls\\debug\\deps","--extern","num=c:\\Users\\jdevo\\Desktop\\Projects\\PathfinderAI\\pdf_reader\\target\\rls\\debug\\deps\\libnum-ca8306cf41ed38dd.rmeta","--extern","time=c:\\Users\\jdevo\\Desktop\\Projects\\PathfinderAI\\pdf_reader\\target\\rls\\debug\\deps\\libtime-08130d6b6c62b777.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\jdevo\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\jdevo\\Desktop\\Projects\\PathfinderAI\\pdf_reader\\target\\rls\\debug\\deps\\libchrono-1d554da9be4a5db3.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[13066702707704082140,7574220421541734923]},"crate_root":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src","external_crates":[{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[13454279496936976369,256594374343364064]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10635428080862470944,4053010167158610789]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2397070696586021034,1787692942867494326]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13215350897914660053,4762041400992555299]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8309206586370028958,10530789326598529563]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12844497061290288730,1165546255938205329]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17370511097861102976,8088456066398622915]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":8,"id":{"name":"hashbrown","disambiguator":[1985867887572050615,3717448080532913995]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":9,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10045986561377339069,14963295625130836827]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14681916437073319406,9740076823699971540]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":11,"id":{"name":"panic_unwind","disambiguator":[4514194809136982995,14217700833302823945]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":12,"id":{"name":"time","disambiguator":[17472039755694973556,13835896977665802513]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":13,"id":{"name":"winapi","disambiguator":[11097971820003981552,2745167796244224593]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":14,"id":{"name":"num","disambiguator":[13147102962193836017,2532236518582403784]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":15,"id":{"name":"num_traits","disambiguator":[7718380084191927129,9368724053517008090]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":16,"id":{"name":"num_integer","disambiguator":[10305111937912254298,9126202501334562408]}},{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","num":17,"id":{"name":"num_iter","disambiguator":[13734917177613119213,15404017626017365751]}}],"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":76,"byte_end":30728,"line_start":4,"line_end":766,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":12,"index":307},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16869,"byte_end":16877,"line_start":361,"line_end":361,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16897,"byte_end":16905,"line_start":363,"line_end":363,"column_start":18,"column_end":26},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16907,"byte_end":16913,"line_start":363,"line_end":363,"column_start":28,"column_end":34},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16915,"byte_end":16926,"line_start":363,"line_end":363,"column_start":36,"column_end":47},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16950,"byte_end":16953,"line_start":364,"line_end":364,"column_start":22,"column_end":25},"alias_span":null,"name":"UTC","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16978,"byte_end":16989,"line_start":365,"line_end":365,"column_start":24,"column_end":35},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17014,"byte_end":17019,"line_start":366,"line_end":366,"column_start":24,"column_end":29},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17042,"byte_end":17051,"line_start":367,"line_end":367,"column_start":22,"column_end":31},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17074,"byte_end":17083,"line_start":368,"line_end":368,"column_start":22,"column_end":31},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17110,"byte_end":17123,"line_start":369,"line_end":369,"column_start":26,"column_end":39},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17139,"byte_end":17143,"line_start":370,"line_end":370,"column_start":15,"column_end":19},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17163,"byte_end":17171,"line_start":371,"line_end":371,"column_start":19,"column_end":27},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17190,"byte_end":17200,"line_start":372,"line_end":372,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17202,"byte_end":17213,"line_start":372,"line_end":372,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17331,"byte_end":17339,"line_start":376,"line_end":376,"column_start":14,"column_end":22},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17341,"byte_end":17349,"line_start":376,"line_end":376,"column_start":24,"column_end":32},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17351,"byte_end":17358,"line_start":376,"line_end":376,"column_start":34,"column_end":41},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17382,"byte_end":17390,"line_start":377,"line_end":377,"column_start":22,"column_end":30},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17392,"byte_end":17398,"line_start":377,"line_end":377,"column_start":32,"column_end":38},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17426,"byte_end":17429,"line_start":378,"line_end":378,"column_start":26,"column_end":29},"alias_span":null,"name":"UTC","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17458,"byte_end":17469,"line_start":379,"line_end":379,"column_start":28,"column_end":39},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17498,"byte_end":17503,"line_start":380,"line_end":380,"column_start":28,"column_end":33},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17530,"byte_end":17539,"line_start":381,"line_end":381,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17566,"byte_end":17575,"line_start":382,"line_end":382,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17606,"byte_end":17619,"line_start":383,"line_end":383,"column_start":30,"column_end":43},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17639,"byte_end":17643,"line_start":384,"line_end":384,"column_start":19,"column_end":23},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17667,"byte_end":17675,"line_start":385,"line_end":385,"column_start":23,"column_end":31},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":30}},{"kind":"Use","ref_id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359132,"byte_end":359145,"line_start":16,"line_end":16,"column_start":25,"column_end":38},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":891}},{"kind":"Use","ref_id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359169,"byte_end":359175,"line_start":17,"line_end":17,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":891}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359198,"byte_end":359203,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":891}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":76,"byte_end":30728,"line_start":4,"line_end":766,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":53},{"krate":0,"index":230},{"krate":0,"index":603},{"krate":0,"index":730},{"krate":0,"index":891},{"krate":0,"index":1610},{"krate":0,"index":1642},{"krate":0,"index":1640},{"krate":0,"index":1639},{"krate":0,"index":1637},{"krate":0,"index":1635},{"krate":0,"index":1632},{"krate":0,"index":1153},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1182}],"decl_id":null,"docs":" # Chrono 0.3.0","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":16591,"byte_end":16613,"line_start":351,"line_end":351,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17308,"byte_end":17315,"line_start":375,"line_end":375,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":1193},{"krate":0,"index":1211},{"krate":0,"index":1207},{"krate":0,"index":1204},{"krate":0,"index":67},{"krate":0,"index":75},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":109},{"krate":0,"index":137},{"krate":0,"index":195}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33700,"byte_end":33704,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33778,"byte_end":33784,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33950,"byte_end":33959,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33551,"byte_end":33562,"line_start":36,"line_end":36,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"LocalResult::{None, Single, Ambiguous}","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":34109,"byte_end":34115,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":34310,"byte_end":34318,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":34541,"byte_end":34547,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":34760,"byte_end":34763,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn <U, F> (self, mut f: F) -> LocalResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35338,"byte_end":35346,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn (self, time: NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35317,"byte_end":35326,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35850,"byte_end":35861,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn (self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35829,"byte_end":35838,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":36490,"byte_end":36507,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn (self, hour: u32, min: u32, sec: u32, milli: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":36469,"byte_end":36478,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":37194,"byte_end":37211,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn (self, hour: u32, min: u32, sec: u32, micro: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":37173,"byte_end":37182,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":37900,"byte_end":37916,"line_start":136,"line_end":136,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn (self, hour: u32, min: u32, sec: u32, nano: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":37879,"byte_end":37888,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38392,"byte_end":38398,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38752,"byte_end":38758,"line_start":161,"line_end":161,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38864,"byte_end":38867,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn (&self) -> FixedOffset","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":39080,"byte_end":39088,"line_start":170,"line_end":170,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":39311,"byte_end":39317,"line_start":174,"line_end":174,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":39934,"byte_end":39937,"line_start":191,"line_end":191,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn (&self, year: i32, month: u32, day: u32) -> Date<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":40753,"byte_end":40760,"line_start":211,"line_end":211,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn (&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":41609,"byte_end":41611,"line_start":233,"line_end":233,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn (&self, year: i32, ordinal: u32) -> Date<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":42162,"byte_end":42168,"line_start":244,"line_end":244,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn (&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":43146,"byte_end":43152,"line_start":268,"line_end":268,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> Date<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":43843,"byte_end":43853,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":44596,"byte_end":44605,"line_start":301,"line_end":301,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn (&self, secs: i64, nsecs: u32) -> DateTime<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":45023,"byte_end":45036,"line_start":310,"line_end":310,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn (&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":45801,"byte_end":45818,"line_start":327,"line_end":327,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn (&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a `DateTime` with the current offset.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":46094,"byte_end":46105,"line_start":334,"line_end":334,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn (offset: &Self::Offset) -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":46217,"byte_end":46239,"line_start":337,"line_end":337,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":46379,"byte_end":46405,"line_start":340,"line_end":340,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":46555,"byte_end":46570,"line_start":343,"line_end":343,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":46922,"byte_end":46941,"line_start":351,"line_end":351,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":47226,"byte_end":47246,"line_start":358,"line_end":358,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":47372,"byte_end":47396,"line_start":361,"line_end":361,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":47603,"byte_end":47616,"line_start":365,"line_end":365,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":47889,"byte_end":47906,"line_start":371,"line_end":371,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utc","qualname":"::offset::utc","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":1214},{"krate":0,"index":1222},{"krate":0,"index":1220},{"krate":0,"index":1218},{"krate":0,"index":1216},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" The UTC (Coordinated Universal Time) time zone.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49082,"byte_end":49085,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"UTC","qualname":"::offset::utc::UTC","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49071,"byte_end":49086,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49071,"byte_end":49086,"line_start":34,"line_end":34,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49174,"byte_end":49179,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"today","qualname":"<UTC>::today","value":"fn () -> Date<UTC>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49297,"byte_end":49300,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"now","qualname":"<UTC>::now","value":"fn () -> DateTime<UTC>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fixed","qualname":"::offset::fixed","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":1223},{"krate":0,"index":1232},{"krate":0,"index":1230},{"krate":0,"index":1227},{"krate":0,"index":1225},{"krate":0,"index":153},{"krate":0,"index":160},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":191}],"decl_id":null,"docs":" The time zone which has a fixed offset from UTC.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51074,"byte_end":51085,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":1224}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51063,"byte_end":51115,"line_start":25,"line_end":27,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51063,"byte_end":51115,"line_start":25,"line_end":27,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51689,"byte_end":51693,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":52028,"byte_end":52036,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":52776,"byte_end":52780,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":53115,"byte_end":53123,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":53406,"byte_end":53421,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":53569,"byte_end":53584,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"local","qualname":"::offset::local","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":1233},{"krate":0,"index":1237},{"krate":0,"index":1235},{"krate":0,"index":213},{"krate":0,"index":216}],"decl_id":null,"docs":" The local (system) time zone.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60632,"byte_end":60637,"line_start":85,"line_end":85,"column_start":12,"column_end":17},"name":"Local","qualname":"::offset::local::Local","value":"","parent":null,"children":[],"decl_id":null,"docs":" The local timescale. This is implemented via the standard `time` crate.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60621,"byte_end":60638,"line_start":85,"line_end":85,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60728,"byte_end":60733,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"today","qualname":"<Local>::today","value":"fn () -> Date<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60867,"byte_end":60870,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"now","qualname":"<Local>::now","value":"fn () -> DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17839,"byte_end":17844,"line_start":395,"line_end":395,"column_start":9,"column_end":14},"name":"naive","qualname":"::naive","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":424},{"krate":0,"index":498}],"decl_id":null,"docs":" Date and time types which do not concern about the timezones.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"date","qualname":"::naive::date","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":1238},{"krate":0,"index":1253},{"krate":0,"index":1251},{"krate":0,"index":1245},{"krate":0,"index":1243},{"krate":0,"index":1242},{"krate":0,"index":1240},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":310},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":344}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":68442,"byte_end":68451,"line_start":96,"line_end":96,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":1239}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](./index.html#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":68431,"byte_end":68496,"line_start":96,"line_end":98,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":68431,"byte_end":68496,"line_start":96,"line_end":98,"column_start":1,"column_end":2}}]},{"kind":"Const","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":68570,"byte_end":68573,"line_start":101,"line_end":101,"column_start":11,"column_end":14},"name":"MIN","qualname":"::naive::date::MIN","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":68723,"byte_end":68726,"line_start":103,"line_end":103,"column_start":11,"column_end":14},"name":"MAX","qualname":"::naive::date::MAX","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":70953,"byte_end":70961,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn (year: i32, month: u32, day: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n (year, month and day).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":71824,"byte_end":71836,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn (year: i32, month: u32, day: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n (year, month and day).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":72690,"byte_end":72697,"line_start":203,"line_end":203,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn (year: i32, ordinal: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":73579,"byte_end":73590,"line_start":227,"line_end":227,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn (year: i32, ordinal: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":74532,"byte_end":74543,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn (year: i32, week: u32, weekday: Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":76918,"byte_end":76933,"line_start":299,"line_end":299,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn (year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":79759,"byte_end":79780,"line_start":367,"line_end":367,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn (days: i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\n in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":79738,"byte_end":79747,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":80726,"byte_end":80751,"line_start":391,"line_end":391,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn (days: i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\n in the proleptic Gregorian calendar.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":82775,"byte_end":82789,"line_start":442,"line_end":442,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":83443,"byte_end":83451,"line_start":463,"line_end":463,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn (&self, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":83422,"byte_end":83431,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":84262,"byte_end":84269,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":84241,"byte_end":84250,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":85150,"byte_end":85161,"line_start":510,"line_end":510,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":85129,"byte_end":85138,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":86095,"byte_end":86108,"line_start":535,"line_end":535,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":86074,"byte_end":86083,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":87176,"byte_end":87193,"line_start":560,"line_end":560,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":87155,"byte_end":87164,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":88189,"byte_end":88202,"line_start":586,"line_end":586,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":88168,"byte_end":88177,"line_start":585,"line_end":585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":89298,"byte_end":89315,"line_start":611,"line_end":611,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":89277,"byte_end":89286,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":90315,"byte_end":90327,"line_start":637,"line_end":637,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":90294,"byte_end":90303,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":91439,"byte_end":91455,"line_start":662,"line_end":662,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":91418,"byte_end":91427,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":93125,"byte_end":93129,"line_start":714,"line_end":714,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":93104,"byte_end":93113,"line_start":713,"line_end":713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":93667,"byte_end":93675,"line_start":733,"line_end":733,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":93646,"byte_end":93655,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":94352,"byte_end":94356,"line_start":751,"line_end":751,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":94331,"byte_end":94340,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":94899,"byte_end":94907,"line_start":770,"line_end":770,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":94878,"byte_end":94887,"line_start":769,"line_end":769,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":95950,"byte_end":95968,"line_start":796,"line_end":796,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":97596,"byte_end":97614,"line_start":832,"line_end":832,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":99539,"byte_end":99560,"line_start":871,"line_end":871,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn (self, rhs: NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":101244,"byte_end":101261,"line_start":910,"line_end":910,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDate>::format_with_items","value":"fn <'a, I> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n Otherwise it is same to the ordinary `format` method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":101223,"byte_end":101232,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":102862,"byte_end":102868,"line_start":948,"line_end":948,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDate>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":102841,"byte_end":102850,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::naive::time","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":440},{"krate":0,"index":1297},{"krate":0,"index":1317},{"krate":0,"index":1315},{"krate":0,"index":1305},{"krate":0,"index":1303},{"krate":0,"index":1302},{"krate":0,"index":1300},{"krate":0,"index":447},{"krate":0,"index":471},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494}],"decl_id":null,"docs":" ISO 8601 time without timezone.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":188402,"byte_end":188411,"line_start":175,"line_end":175,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":188391,"byte_end":188445,"line_start":175,"line_end":178,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":188391,"byte_end":188445,"line_start":175,"line_end":178,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":189081,"byte_end":189089,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn (hour: u32, min: u32, sec: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":189060,"byte_end":189069,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":189958,"byte_end":189970,"line_start":225,"line_end":225,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn (hour: u32, min: u32, sec: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":189937,"byte_end":189946,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":190723,"byte_end":190737,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":190702,"byte_end":190711,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":191809,"byte_end":191827,"line_start":275,"line_end":275,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":191788,"byte_end":191797,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":192663,"byte_end":192677,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":192642,"byte_end":192651,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":193765,"byte_end":193783,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":193744,"byte_end":193753,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":194619,"byte_end":194632,"line_start":350,"line_end":350,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":194598,"byte_end":194607,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":195729,"byte_end":195746,"line_start":377,"line_end":377,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":195708,"byte_end":195717,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":196682,"byte_end":196712,"line_start":402,"line_end":402,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn (secs: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":196661,"byte_end":196670,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":197695,"byte_end":197729,"line_start":427,"line_end":427,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn (secs: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":197674,"byte_end":197683,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":200393,"byte_end":200407,"line_start":493,"line_end":493,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":201501,"byte_end":201523,"line_start":521,"line_end":521,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn (&self, mut rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":204995,"byte_end":205017,"line_start":607,"line_end":607,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn (&self, rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":204974,"byte_end":204983,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":208083,"byte_end":208104,"line_start":672,"line_end":672,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn (self, rhs: NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":210475,"byte_end":210492,"line_start":726,"line_end":726,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveTime>::format_with_items","value":"fn <'a, I> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified formatting items.\n Otherwise it is same to the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":210454,"byte_end":210463,"line_start":725,"line_end":725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":212226,"byte_end":212232,"line_start":766,"line_end":766,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified format string.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":212205,"byte_end":212214,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datetime","qualname":"::naive::datetime","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":520},{"krate":0,"index":527},{"krate":0,"index":1320},{"krate":0,"index":1340},{"krate":0,"index":1338},{"krate":0,"index":1328},{"krate":0,"index":1326},{"krate":0,"index":1325},{"krate":0,"index":1323},{"krate":0,"index":528},{"krate":0,"index":549},{"krate":0,"index":573},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599}],"decl_id":null,"docs":" ISO 8601 date and time without timezone.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":249605,"byte_end":249618,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":249594,"byte_end":249664,"line_start":52,"line_end":55,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":249594,"byte_end":249664,"line_start":52,"line_end":55,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":250286,"byte_end":250289,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn (date: NaiveDate, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](../date/struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":250265,"byte_end":250274,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":251570,"byte_end":251584,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn (secs: i64, nsecs: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":251549,"byte_end":251558,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":252921,"byte_end":252939,"line_start":136,"line_end":136,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn (secs: i64, nsecs: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":252900,"byte_end":252909,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":256327,"byte_end":256341,"line_start":208,"line_end":208,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":256868,"byte_end":256872,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":256847,"byte_end":256856,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":257225,"byte_end":257229,"line_start":240,"line_end":240,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":257204,"byte_end":257213,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":257893,"byte_end":257902,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":257872,"byte_end":257881,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":258734,"byte_end":258757,"line_start":284,"line_end":284,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":258713,"byte_end":258722,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":259485,"byte_end":259508,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":259464,"byte_end":259473,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":260245,"byte_end":260267,"line_start":326,"line_end":326,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":260224,"byte_end":260233,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":263640,"byte_end":263658,"line_start":404,"line_end":404,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":267196,"byte_end":267214,"line_start":486,"line_end":486,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":269617,"byte_end":269638,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn (self, rhs: NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":271018,"byte_end":271035,"line_start":574,"line_end":574,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDateTime>::format_with_items","value":"fn <'a, I> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n Otherwise it is same to the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":270997,"byte_end":271006,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":272749,"byte_end":272755,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDateTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":272728,"byte_end":272737,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"date","qualname":"::date","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":1343},{"krate":0,"index":1347},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":660},{"krate":0,"index":664},{"krate":0,"index":671},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":727}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316189,"byte_end":316193,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316301,"byte_end":316304,"line_start":50,"line_end":50,"column_start":11,"column_end":14},"name":"MIN","qualname":"::date::MIN","value":"Date<UTC>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316407,"byte_end":316410,"line_start":52,"line_end":52,"column_start":11,"column_end":14},"name":"MAX","qualname":"::date::MAX","value":"Date<UTC>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316760,"byte_end":316768,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn (date: NaiveDate, offset: Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316739,"byte_end":316748,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317069,"byte_end":317077,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn (&self, time: NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317048,"byte_end":317057,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317474,"byte_end":317481,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317453,"byte_end":317462,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317836,"byte_end":317847,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":317815,"byte_end":317824,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":318334,"byte_end":318347,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":318313,"byte_end":318322,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":318838,"byte_end":318855,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":318817,"byte_end":318826,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":319400,"byte_end":319413,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":319379,"byte_end":319388,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":319908,"byte_end":319925,"line_start":129,"line_end":129,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":319887,"byte_end":319896,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":320471,"byte_end":320483,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":320450,"byte_end":320459,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":320976,"byte_end":320992,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":320955,"byte_end":320964,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321337,"byte_end":321341,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321316,"byte_end":321325,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321563,"byte_end":321571,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321542,"byte_end":321551,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321831,"byte_end":321835,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":321810,"byte_end":321819,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322059,"byte_end":322067,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322038,"byte_end":322047,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322261,"byte_end":322267,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn <'a> (&'a self) -> &'a Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322240,"byte_end":322249,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322398,"byte_end":322406,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322377,"byte_end":322386,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322632,"byte_end":322645,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> Date<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322611,"byte_end":322620,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322877,"byte_end":322895,"line_start":210,"line_end":210,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":322856,"byte_end":322865,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323215,"byte_end":323233,"line_start":219,"line_end":219,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323194,"byte_end":323203,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323661,"byte_end":323682,"line_start":230,"line_end":230,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: Date<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323640,"byte_end":323649,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323865,"byte_end":323874,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":323844,"byte_end":323853,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324180,"byte_end":324191,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324159,"byte_end":324168,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324678,"byte_end":324695,"line_start":260,"line_end":260,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<Date<Tz>>::format_with_items","value":"fn <'a, I> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324657,"byte_end":324666,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":325096,"byte_end":325102,"line_start":269,"line_end":269,"column_start":12,"column_end":18},"name":"format","qualname":"<Date<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":325075,"byte_end":325084,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datetime","qualname":"::datetime","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":758},{"krate":0,"index":1350},{"krate":0,"index":1354},{"krate":0,"index":765},{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":795},{"krate":0,"index":806},{"krate":0,"index":831},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":883},{"krate":0,"index":887}],"decl_id":null,"docs":" ISO 8601 date and time with time zone.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":329417,"byte_end":329425,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330066,"byte_end":330074,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn (datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330045,"byte_end":330054,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330262,"byte_end":330266,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330241,"byte_end":330250,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330491,"byte_end":330495,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330470,"byte_end":330479,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330712,"byte_end":330721,"line_start":68,"line_end":68,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":330691,"byte_end":330700,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331045,"byte_end":331068,"line_start":78,"line_end":78,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331024,"byte_end":331033,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331410,"byte_end":331433,"line_start":88,"line_end":88,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331389,"byte_end":331398,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331777,"byte_end":331799,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331756,"byte_end":331765,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331944,"byte_end":331950,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn <'a> (&'a self) -> &'a Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":331923,"byte_end":331932,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332081,"byte_end":332089,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332060,"byte_end":332069,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332319,"byte_end":332332,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> DateTime<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `DateTime` (but will change the string representation).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332298,"byte_end":332307,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332585,"byte_end":332603,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332564,"byte_end":332573,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332956,"byte_end":332974,"line_start":134,"line_end":134,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":332935,"byte_end":332944,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333317,"byte_end":333338,"line_start":142,"line_end":142,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: DateTime<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333296,"byte_end":333305,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333537,"byte_end":333546,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333516,"byte_end":333525,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333679,"byte_end":333690,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":333658,"byte_end":333667,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":334293,"byte_end":334311,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new `DateTime` with a parsed `FixedOffset`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":334950,"byte_end":334968,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":335593,"byte_end":335607,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a new `DateTime` with a parsed `FixedOffset`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":335975,"byte_end":335985,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"to_rfc2822","qualname":"<DateTime<Tz>>::to_rfc2822","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":336268,"byte_end":336278,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"to_rfc3339","qualname":"<DateTime<Tz>>::to_rfc3339","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":336556,"byte_end":336573,"line_start":215,"line_end":215,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<DateTime<Tz>>::format_with_items","value":"fn <'a, I> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":336535,"byte_end":336544,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":337040,"byte_end":337046,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"format","qualname":"<DateTime<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":337019,"byte_end":337028,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":1357},{"krate":0,"index":1362},{"krate":0,"index":1360},{"krate":0,"index":1358},{"krate":0,"index":1364},{"krate":0,"index":1379},{"krate":0,"index":1377},{"krate":0,"index":1375},{"krate":0,"index":1373},{"krate":0,"index":1371},{"krate":0,"index":1380},{"krate":0,"index":1431},{"krate":0,"index":1428},{"krate":0,"index":1426},{"krate":0,"index":1424},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":1433},{"krate":0,"index":1478},{"krate":0,"index":1475},{"krate":0,"index":1473},{"krate":0,"index":1471},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":1480},{"krate":0,"index":1513},{"krate":0,"index":1509},{"krate":0,"index":1506},{"krate":0,"index":1503},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":1516},{"krate":0,"index":1527},{"krate":0,"index":1525},{"krate":0,"index":1522},{"krate":0,"index":1520},{"krate":0,"index":1519},{"krate":0,"index":1529},{"krate":0,"index":1551},{"krate":0,"index":1549},{"krate":0,"index":1547},{"krate":0,"index":1545},{"krate":0,"index":1544},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":994},{"krate":0,"index":1062},{"krate":0,"index":1096},{"krate":0,"index":1124},{"krate":0,"index":1601},{"krate":0,"index":1607},{"krate":0,"index":1143},{"krate":0,"index":1149}],"decl_id":null,"docs":" Formatting utilities for date and time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359456,"byte_end":359460,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359494,"byte_end":359498,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359527,"byte_end":359532,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359426,"byte_end":359429,"line_start":26,"line_end":26,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"Pad::{None, Zero, Space}","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1369}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359417,"byte_end":359535,"line_start":26,"line_end":33,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":359417,"byte_end":359535,"line_start":26,"line_end":33,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360430,"byte_end":360434,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360536,"byte_end":360546,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360617,"byte_end":360627,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360762,"byte_end":360769,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360867,"byte_end":360880,"line_start":61,"line_end":61,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360963,"byte_end":360976,"line_start":63,"line_end":63,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361007,"byte_end":361012,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361054,"byte_end":361057,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361150,"byte_end":361161,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1399},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361254,"byte_end":361265,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361323,"byte_end":361330,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361406,"byte_end":361420,"line_start":75,"line_end":75,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361494,"byte_end":361508,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361549,"byte_end":361556,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361615,"byte_end":361619,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361678,"byte_end":361684,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361757,"byte_end":361763,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":361838,"byte_end":361844,"line_start":87,"line_end":87,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362047,"byte_end":362057,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362237,"byte_end":362246,"line_start":94,"line_end":94,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362465,"byte_end":362473,"line_start":100,"line_end":100,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360293,"byte_end":360300,"line_start":49,"line_end":49,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"Numeric::{Year, YearDiv100, YearMod100, IsoYear, IsoYearDiv100, IsoYearMod100, Month, Day, WeekFromSun, WeekFromMon, IsoWeek, NumDaysFromSun, WeekdayFromMon, Ordinal, Hour, Hour12, Minute, Second, Nanosecond, Timestamp, Internal}","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1421}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":360284,"byte_end":362493,"line_start":49,"line_end":101,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362581,"byte_end":362596,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":908}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363395,"byte_end":363409,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1436},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363542,"byte_end":363555,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363704,"byte_end":363720,"line_start":146,"line_end":146,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363863,"byte_end":363878,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363956,"byte_end":363965,"line_start":154,"line_end":154,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364043,"byte_end":364052,"line_start":158,"line_end":158,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364299,"byte_end":364309,"line_start":162,"line_end":162,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364399,"byte_end":364410,"line_start":164,"line_end":164,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364500,"byte_end":364511,"line_start":166,"line_end":166,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364601,"byte_end":364612,"line_start":168,"line_end":168,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":364733,"byte_end":364745,"line_start":172,"line_end":172,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365083,"byte_end":365102,"line_start":178,"line_end":178,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1458},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365497,"byte_end":365517,"line_start":185,"line_end":185,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1460},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365656,"byte_end":365670,"line_start":188,"line_end":188,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365811,"byte_end":365826,"line_start":191,"line_end":191,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365919,"byte_end":365926,"line_start":193,"line_end":193,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":365982,"byte_end":365989,"line_start":195,"line_end":195,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366208,"byte_end":366216,"line_start":201,"line_end":201,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":1433},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363250,"byte_end":363255,"line_start":134,"line_end":134,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"Fixed::{ShortMonthName, LongMonthName, ShortWeekdayName, LongWeekdayName, LowerAmPm, UpperAmPm, Nanosecond, Nanosecond3, Nanosecond6, Nanosecond9, TimezoneName, TimezoneOffsetColon, TimezoneOffsetColonZ, TimezoneOffset, TimezoneOffsetZ, RFC2822, RFC3339, Internal}","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":363241,"byte_end":366234,"line_start":134,"line_end":202,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366327,"byte_end":366340,"line_start":205,"line_end":205,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":917}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366943,"byte_end":366950,"line_start":234,"line_end":234,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367030,"byte_end":367042,"line_start":236,"line_end":236,"column_start":5,"column_end":17},"name":"OwnedLiteral","qualname":"::format::Item::OwnedLiteral","value":"Item::OwnedLiteral(Box<str>)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Same to `Literal` but with the string owned by the item.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367130,"byte_end":367135,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367213,"byte_end":367223,"line_start":240,"line_end":240,"column_start":5,"column_end":15},"name":"OwnedSpace","qualname":"::format::Item::OwnedSpace","value":"Item::OwnedSpace(Box<str>)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Same to `Space` but with the string owned by the item.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367402,"byte_end":367409,"line_start":243,"line_end":243,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1498},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367456,"byte_end":367461,"line_start":245,"line_end":245,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1501},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":367550,"byte_end":367555,"line_start":247,"line_end":247,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":1480},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366883,"byte_end":366887,"line_start":232,"line_end":232,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"Item::{Literal, OwnedLiteral, Space, OwnedSpace, Numeric, Fixed, Error}","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1501}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366874,"byte_end":367558,"line_start":232,"line_end":248,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1516},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":368055,"byte_end":368065,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":368044,"byte_end":368082,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":368044,"byte_end":368082,"line_start":259,"line_end":259,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":369301,"byte_end":369312,"line_start":293,"line_end":293,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same to `Result<T, ParseError>`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":370761,"byte_end":370767,"line_start":326,"line_end":326,"column_start":8,"column_end":14},"name":"format","qualname":"::format::format","value":"fn <'a, I> (w: &mut fmt::Formatter, date: Option<&NaiveDate>, time: Option<&NaiveTime>, off: Option<&(String, FixedOffset)>, items: I) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Tries to format given arguments with given formatting items.\n Internally used by `DelayedFormat`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsed","qualname":"::format::parsed","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1553},{"krate":0,"index":1580},{"krate":0,"index":1577},{"krate":0,"index":1575},{"krate":0,"index":1016},{"krate":0,"index":1018},{"krate":0,"index":1020}],"decl_id":null,"docs":" A collection of parsed date and time items.\n They can be constructed incrementally while being checked for consistency.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":383761,"byte_end":383767,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":383676,"byte_end":383714,"line_start":28,"line_end":28,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":383944,"byte_end":383948,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":384252,"byte_end":384264,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1556},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":384357,"byte_end":384369,"line_start":45,"line_end":45,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":384633,"byte_end":384640,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../../naive/date/index.html#week-date).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385024,"byte_end":385039,"line_start":59,"line_end":59,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../../naive/date/index.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385203,"byte_end":385218,"line_start":63,"line_end":63,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../../naive/date/index.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385265,"byte_end":385270,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1561},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385425,"byte_end":385438,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1562},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385593,"byte_end":385606,"line_start":74,"line_end":74,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385743,"byte_end":385750,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" [ISO week number](../../naive/date/index.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1564},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385799,"byte_end":385806,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"std::option::Option<Weekday>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1565},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":385900,"byte_end":385907,"line_start":84,"line_end":84,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1566},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386011,"byte_end":386014,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1567},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386115,"byte_end":386126,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1568},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386189,"byte_end":386200,"line_start":93,"line_end":93,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1569},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386255,"byte_end":386261,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1570},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386345,"byte_end":386351,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386450,"byte_end":386460,"line_start":102,"line_end":102,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"std::option::Option<u32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1572},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386663,"byte_end":386672,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1573},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":386751,"byte_end":386757,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387852,"byte_end":387855,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn () -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387991,"byte_end":387999,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":388239,"byte_end":388255,"line_start":152,"line_end":152,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":388554,"byte_end":388570,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":388859,"byte_end":388870,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":389119,"byte_end":389138,"line_start":169,"line_end":169,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":389446,"byte_end":389465,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":389753,"byte_end":389762,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":390005,"byte_end":390022,"line_start":186,"line_end":186,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":390273,"byte_end":390290,"line_start":191,"line_end":191,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":390529,"byte_end":390540,"line_start":196,"line_end":196,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":390773,"byte_end":390784,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn (&mut self, value: Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":390986,"byte_end":390997,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":391222,"byte_end":391229,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":391506,"byte_end":391514,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn (&mut self, value: bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":391773,"byte_end":391783,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":392126,"byte_end":392134,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":392479,"byte_end":392489,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":392719,"byte_end":392729,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":392967,"byte_end":392981,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":393221,"byte_end":393234,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":393432,"byte_end":393442,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":394091,"byte_end":394104,"line_start":273,"line_end":273,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn (&self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":403040,"byte_end":403053,"line_start":455,"line_end":455,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn (&self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":404836,"byte_end":404865,"line_start":497,"line_end":497,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn (&self, offset: i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":408360,"byte_end":408375,"line_start":568,"line_end":568,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn (&self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":408847,"byte_end":408858,"line_start":578,"line_end":578,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn (&self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":409901,"byte_end":409926,"line_start":598,"line_end":598,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn <Tz> (&self, tz: &Tz) -> ParseResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parse.rs","byte_start":455440,"byte_end":455445,"line_start":207,"line_end":207,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn <'a, I> (parsed: &mut Parsed, mut s: &str, items: I) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1585},{"krate":0,"index":1589},{"krate":0,"index":1130},{"krate":0,"index":1135}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":488340,"byte_end":488353,"line_start":153,"line_end":153,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":488829,"byte_end":488832,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn (s: &'a str) -> StrftimeItems<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381320,"byte_end":381333,"line_start":528,"line_end":528,"column_start":12,"column_end":25},"name":"DelayedFormat","qualname":"::format::DelayedFormat","value":"DelayedFormat {  }","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606}],"decl_id":null,"docs":" A *temporary* object which can be used as an argument to `format!` or others.\n This is normally constructed via `format` methods of each date and time type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381789,"byte_end":381792,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayedFormat<I>>::new","value":"fn (date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":382052,"byte_end":382067,"line_start":546,"line_end":546,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<DelayedFormat<I>>::new_with_offset","value":"fn <Off> (date: Option<NaiveDate>, time: Option<NaiveTime>, offset: &Off, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time and UTC offset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18647,"byte_end":18650,"line_start":418,"line_end":418,"column_start":5,"column_end":8},"name":"Mon","qualname":"::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18677,"byte_end":18680,"line_start":420,"line_end":420,"column_start":5,"column_end":8},"name":"Tue","qualname":"::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18709,"byte_end":18712,"line_start":422,"line_end":422,"column_start":5,"column_end":8},"name":"Wed","qualname":"::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18740,"byte_end":18743,"line_start":424,"line_end":424,"column_start":5,"column_end":8},"name":"Thu","qualname":"::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18769,"byte_end":18772,"line_start":426,"line_end":426,"column_start":5,"column_end":8},"name":"Fri","qualname":"::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18800,"byte_end":18803,"line_start":428,"line_end":428,"column_start":5,"column_end":8},"name":"Sat","qualname":"::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18829,"byte_end":18832,"line_start":430,"line_end":430,"column_start":5,"column_end":8},"name":"Sun","qualname":"::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18617,"byte_end":18624,"line_start":416,"line_end":416,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::Weekday","value":"Weekday::{Mon, Tue, Wed, Thu, Fri, Sat, Sun}","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18608,"byte_end":18839,"line_start":416,"line_end":431,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18608,"byte_end":18839,"line_start":416,"line_end":431,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":19151,"byte_end":19155,"line_start":440,"line_end":440,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":19130,"byte_end":19139,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":19808,"byte_end":19812,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":19787,"byte_end":19796,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":20554,"byte_end":20572,"line_start":476,"line_end":476,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":20533,"byte_end":20542,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":21207,"byte_end":21225,"line_start":494,"line_end":494,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":21186,"byte_end":21195,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":21866,"byte_end":21886,"line_start":512,"line_end":512,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":21845,"byte_end":21854,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":22527,"byte_end":22547,"line_start":530,"line_end":530,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":22506,"byte_end":22515,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":23935,"byte_end":23943,"line_start":578,"line_end":578,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24055,"byte_end":24059,"line_start":580,"line_end":580,"column_start":8,"column_end":12},"name":"year","qualname":"::Datelike::year","value":"fn (&self) -> i32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/date/index.html#calendar-date).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24268,"byte_end":24275,"line_start":585,"line_end":585,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::Datelike::year_ce","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24251,"byte_end":24260,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24570,"byte_end":24575,"line_start":597,"line_end":597,"column_start":8,"column_end":13},"name":"month","qualname":"::Datelike::month","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24703,"byte_end":24709,"line_start":602,"line_end":602,"column_start":8,"column_end":14},"name":"month0","qualname":"::Datelike::month0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":24880,"byte_end":24883,"line_start":607,"line_end":607,"column_start":8,"column_end":11},"name":"day","qualname":"::Datelike::day","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25054,"byte_end":25058,"line_start":612,"line_end":612,"column_start":8,"column_end":12},"name":"day0","qualname":"::Datelike::day0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25227,"byte_end":25234,"line_start":617,"line_end":617,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::Datelike::ordinal","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25403,"byte_end":25411,"line_start":622,"line_end":622,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::Datelike::ordinal0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25468,"byte_end":25475,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"weekday","qualname":"::Datelike::weekday","value":"fn (&self) -> Weekday","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25654,"byte_end":25665,"line_start":629,"line_end":629,"column_start":8,"column_end":19},"name":"isoweekdate","qualname":"::Datelike::isoweekdate","value":"fn (&self) -> (i32, u32, Weekday)","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the ISO week date: an adjusted year, week number and day of week.\n The adjusted year may differ from that of the calendar date.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":25835,"byte_end":25844,"line_start":634,"line_end":634,"column_start":8,"column_end":17},"name":"with_year","qualname":"::Datelike::with_year","value":"fn (&self, year: i32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":26037,"byte_end":26047,"line_start":639,"line_end":639,"column_start":8,"column_end":18},"name":"with_month","qualname":"::Datelike::with_month","value":"fn (&self, month: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":26241,"byte_end":26252,"line_start":644,"line_end":644,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::Datelike::with_month0","value":"fn (&self, month0: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":26447,"byte_end":26455,"line_start":649,"line_end":649,"column_start":8,"column_end":16},"name":"with_day","qualname":"::Datelike::with_day","value":"fn (&self, day: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":26647,"byte_end":26656,"line_start":654,"line_end":654,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::Datelike::with_day0","value":"fn (&self, day0: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":26848,"byte_end":26860,"line_start":659,"line_end":659,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::Datelike::with_ordinal","value":"fn (&self, ordinal: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27055,"byte_end":27068,"line_start":664,"line_end":664,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::Datelike::with_ordinal0","value":"fn (&self, ordinal0: u32) -> Option<Self>","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27215,"byte_end":27231,"line_start":667,"line_end":667,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::Datelike::num_days_from_ce","value":"fn (&self) -> i32","parent":{"krate":0,"index":1163},"children":[],"decl_id":null,"docs":" Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1182},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27765,"byte_end":27773,"line_start":683,"line_end":683,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27836,"byte_end":27840,"line_start":685,"line_end":685,"column_start":8,"column_end":12},"name":"hour","qualname":"::Timelike::hour","value":"fn (&self) -> u32","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27991,"byte_end":27997,"line_start":690,"line_end":690,"column_start":8,"column_end":14},"name":"hour12","qualname":"::Timelike::hour12","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27974,"byte_end":27983,"line_start":689,"line_end":689,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":28241,"byte_end":28247,"line_start":700,"line_end":700,"column_start":8,"column_end":14},"name":"minute","qualname":"::Timelike::minute","value":"fn (&self) -> u32","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":28319,"byte_end":28325,"line_start":703,"line_end":703,"column_start":8,"column_end":14},"name":"second","qualname":"::Timelike::second","value":"fn (&self) -> u32","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":28562,"byte_end":28572,"line_start":708,"line_end":708,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::Timelike::nanosecond","value":"fn (&self) -> u32","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/time/index.html#leap-second-handling).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":28726,"byte_end":28735,"line_start":713,"line_end":713,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::Timelike::with_hour","value":"fn (&self, hour: u32) -> Option<Self>","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":28911,"byte_end":28922,"line_start":718,"line_end":718,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::Timelike::with_minute","value":"fn (&self, min: u32) -> Option<Self>","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":29209,"byte_end":29220,"line_start":725,"line_end":725,"column_start":8,"column_end":19},"name":"with_second","qualname":"::Timelike::with_second","value":"fn (&self, sec: u32) -> Option<Self>","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":29553,"byte_end":29568,"line_start":732,"line_end":732,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::Timelike::with_nanosecond","value":"fn (&self, nano: u32) -> Option<Self>","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":29697,"byte_end":29722,"line_start":736,"line_end":736,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::Timelike::num_seconds_from_midnight","value":"fn (&self) -> u32","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":29680,"byte_end":29689,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33994,"byte_end":34005,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35085,"byte_end":35096,"line_start":73,"line_end":73,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38288,"byte_end":38299,"line_start":147,"line_end":147,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49093,"byte_end":49096,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49507,"byte_end":49510,"line_start":48,"line_end":48,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49993,"byte_end":49996,"line_start":64,"line_end":64,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":50080,"byte_end":50083,"line_start":68,"line_end":68,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":50187,"byte_end":50190,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51122,"byte_end":51133,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":53658,"byte_end":53669,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54221,"byte_end":54232,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54301,"byte_end":54312,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54806,"byte_end":54817,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55562,"byte_end":55571,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55759,"byte_end":55768,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55957,"byte_end":55970,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56166,"byte_end":56179,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56390,"byte_end":56398,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56610,"byte_end":56618,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60645,"byte_end":60650,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60960,"byte_end":60965,"line_start":99,"line_end":99,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":69683,"byte_end":69692,"line_start":123,"line_end":123,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":103015,"byte_end":103024,"line_start":953,"line_end":953,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":114706,"byte_end":114715,"line_start":1308,"line_end":1308,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":116137,"byte_end":116146,"line_start":1340,"line_end":1340,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":117638,"byte_end":117647,"line_start":1375,"line_end":1375,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":118678,"byte_end":118687,"line_start":1406,"line_end":1406,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":119945,"byte_end":119954,"line_start":1441,"line_end":1441,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":120547,"byte_end":120556,"line_start":1461,"line_end":1461,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":152824,"byte_end":152833,"line_start":2159,"line_end":2159,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":153713,"byte_end":153722,"line_start":2192,"line_end":2192,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":162643,"byte_end":162645,"line_start":2329,"line_end":2329,"column_start":10,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":164959,"byte_end":164961,"line_start":2414,"line_end":2414,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":165561,"byte_end":165564,"line_start":2430,"line_end":2430,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":167704,"byte_end":167707,"line_start":2511,"line_end":2511,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":188452,"byte_end":188461,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":212622,"byte_end":212631,"line_start":778,"line_end":778,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":219815,"byte_end":219824,"line_start":983,"line_end":983,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":222843,"byte_end":222852,"line_start":1048,"line_end":1048,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":225506,"byte_end":225515,"line_start":1111,"line_end":1111,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":226903,"byte_end":226912,"line_start":1148,"line_end":1148,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":228769,"byte_end":228778,"line_start":1198,"line_end":1198,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":229541,"byte_end":229550,"line_start":1221,"line_end":1221,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":249671,"byte_end":249684,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":272902,"byte_end":272915,"line_start":617,"line_end":617,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":284079,"byte_end":284092,"line_start":935,"line_end":935,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":290336,"byte_end":290349,"line_start":1107,"line_end":1107,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":292958,"byte_end":292971,"line_start":1169,"line_end":1169,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":295565,"byte_end":295578,"line_start":1232,"line_end":1232,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":296832,"byte_end":296845,"line_start":1268,"line_end":1268,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":297940,"byte_end":297953,"line_start":1299,"line_end":1299,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":298694,"byte_end":298707,"line_start":1321,"line_end":1321,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316490,"byte_end":316494,"line_start":54,"line_end":54,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324549,"byte_end":324553,"line_start":257,"line_end":257,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":325263,"byte_end":325267,"line_start":274,"line_end":274,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":326976,"byte_end":326980,"line_start":322,"line_end":322,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327060,"byte_end":327064,"line_start":323,"line_end":323,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327169,"byte_end":327173,"line_start":325,"line_end":325,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327281,"byte_end":327285,"line_start":329,"line_end":329,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327329,"byte_end":327333,"line_start":332,"line_end":332,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327485,"byte_end":327489,"line_start":338,"line_end":338,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327612,"byte_end":327616,"line_start":342,"line_end":342,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327743,"byte_end":327747,"line_start":346,"line_end":346,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327971,"byte_end":327975,"line_start":355,"line_end":355,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":328193,"byte_end":328197,"line_start":364,"line_end":364,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":328371,"byte_end":328375,"line_start":370,"line_end":370,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":329517,"byte_end":329525,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":334101,"byte_end":334109,"line_start":165,"line_end":165,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":335827,"byte_end":335835,"line_start":200,"line_end":200,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":337207,"byte_end":337215,"line_start":230,"line_end":230,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":338946,"byte_end":338954,"line_start":277,"line_end":277,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":339930,"byte_end":339938,"line_start":305,"line_end":305,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340018,"byte_end":340026,"line_start":306,"line_end":306,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340135,"byte_end":340143,"line_start":308,"line_end":308,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340263,"byte_end":340271,"line_start":312,"line_end":312,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340315,"byte_end":340323,"line_start":315,"line_end":315,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340487,"byte_end":340495,"line_start":321,"line_end":321,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340630,"byte_end":340638,"line_start":325,"line_end":325,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340769,"byte_end":340777,"line_start":329,"line_end":329,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341013,"byte_end":341021,"line_start":338,"line_end":338,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341251,"byte_end":341259,"line_start":347,"line_end":347,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341433,"byte_end":341441,"line_start":353,"line_end":353,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341629,"byte_end":341637,"line_start":359,"line_end":359,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":342837,"byte_end":342845,"line_start":386,"line_end":386,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":343045,"byte_end":343053,"line_start":394,"line_end":394,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362635,"byte_end":362650,"line_start":108,"line_end":108,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362740,"byte_end":362755,"line_start":114,"line_end":114,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362861,"byte_end":362876,"line_start":120,"line_end":120,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362902,"byte_end":362917,"line_start":123,"line_end":123,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366379,"byte_end":366392,"line_start":209,"line_end":209,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366482,"byte_end":366495,"line_start":215,"line_end":215,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366599,"byte_end":366612,"line_start":221,"line_end":221,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366638,"byte_end":366651,"line_start":224,"line_end":224,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":369364,"byte_end":369374,"line_start":295,"line_end":295,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":369494,"byte_end":369504,"line_start":301,"line_end":301,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387279,"byte_end":387285,"line_start":127,"line_end":127,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387781,"byte_end":387787,"line_start":140,"line_end":140,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":488719,"byte_end":488732,"line_start":162,"line_end":162,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":489007,"byte_end":489020,"line_start":170,"line_end":170,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381689,"byte_end":381702,"line_start":539,"line_end":539,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":382470,"byte_end":382483,"line_start":554,"line_end":554,"column_start":63,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18846,"byte_end":18853,"line_start":433,"line_end":433,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":23110,"byte_end":23117,"line_start":546,"line_end":546,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":17823,"byte_end":17829,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":53}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":48041,"byte_end":48044,"line_start":376,"line_end":376,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":109}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":48054,"byte_end":48059,"line_start":377,"line_end":377,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":48069,"byte_end":48074,"line_start":378,"line_end":378,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":195}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18125,"byte_end":18129,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":231}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18143,"byte_end":18147,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":424}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18161,"byte_end":18169,"line_start":403,"line_end":403,"column_start":13,"column_end":21},"ref_id":{"krate":0,"index":498}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18181,"byte_end":18185,"line_start":405,"line_end":405,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":603}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18195,"byte_end":18203,"line_start":406,"line_end":406,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":730}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18213,"byte_end":18219,"line_start":407,"line_end":407,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":891}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381008,"byte_end":381014,"line_start":517,"line_end":517,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":994}},{"kind":"Mod","span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381117,"byte_end":381125,"line_start":523,"line_end":523,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1124}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":33994,"byte_end":34005,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":35085,"byte_end":35096,"line_start":73,"line_end":73,"column_start":20,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38288,"byte_end":38299,"line_start":147,"line_end":147,"column_start":21,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38760,"byte_end":38765,"line_start":161,"line_end":161,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38768,"byte_end":38773,"line_start":161,"line_end":161,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":38781,"byte_end":38786,"line_start":161,"line_end":161,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":6707},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":39090,"byte_end":39095,"line_start":170,"line_end":170,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\mod.rs","byte_start":39098,"byte_end":39103,"line_start":170,"line_end":170,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2002},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49093,"byte_end":49096,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49507,"byte_end":49510,"line_start":48,"line_end":48,"column_start":19,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1214},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":49993,"byte_end":49996,"line_start":64,"line_end":64,"column_start":17,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1214},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":50080,"byte_end":50083,"line_start":68,"line_end":68,"column_start":21,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1214},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\utc.rs","byte_start":50187,"byte_end":50190,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1214},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":51122,"byte_end":51133,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":53658,"byte_end":53669,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54221,"byte_end":54232,"line_start":117,"line_end":117,"column_start":17,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":85}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54301,"byte_end":54312,"line_start":121,"line_end":121,"column_start":21,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":54806,"byte_end":54817,"line_start":135,"line_end":135,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55562,"byte_end":55571,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55759,"byte_end":55768,"line_start":162,"line_end":162,"column_start":27,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":55957,"byte_end":55970,"line_start":171,"line_end":171,"column_start":27,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56166,"byte_end":56179,"line_start":180,"line_end":180,"column_start":27,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56390,"byte_end":56398,"line_start":189,"line_end":189,"column_start":41,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\fixed.rs","byte_start":56610,"byte_end":56618,"line_start":198,"line_end":198,"column_start":41,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60645,"byte_end":60650,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\offset\\local.rs","byte_start":60960,"byte_end":60965,"line_start":99,"line_end":99,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1233},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":69683,"byte_end":69692,"line_start":123,"line_end":123,"column_start":6,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":103015,"byte_end":103024,"line_start":953,"line_end":953,"column_start":19,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1238},"to":{"krate":0,"index":1163}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":114706,"byte_end":114715,"line_start":1308,"line_end":1308,"column_start":21,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":6364}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":116137,"byte_end":116146,"line_start":1340,"line_end":1340,"column_start":27,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":117638,"byte_end":117647,"line_start":1375,"line_end":1375,"column_start":27,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":118678,"byte_end":118687,"line_start":1406,"line_end":1406,"column_start":21,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":119945,"byte_end":119954,"line_start":1441,"line_end":1441,"column_start":23,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":120547,"byte_end":120556,"line_start":1461,"line_end":1461,"column_start":23,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":152824,"byte_end":152833,"line_start":2159,"line_end":2159,"column_start":10,"column_end":19},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":153713,"byte_end":153722,"line_start":2192,"line_end":2192,"column_start":25,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":162643,"byte_end":162645,"line_start":2329,"line_end":2329,"column_start":10,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":164959,"byte_end":164961,"line_start":2414,"line_end":2414,"column_start":25,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1267},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":165561,"byte_end":165564,"line_start":2430,"line_end":2430,"column_start":10,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\date.rs","byte_start":167704,"byte_end":167707,"line_start":2511,"line_end":2511,"column_start":25,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1282},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":188452,"byte_end":188461,"line_start":180,"line_end":180,"column_start":6,"column_end":15},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":212622,"byte_end":212631,"line_start":778,"line_end":778,"column_start":19,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1297},"to":{"krate":0,"index":1182}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":219815,"byte_end":219824,"line_start":983,"line_end":983,"column_start":21,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":6364}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":222843,"byte_end":222852,"line_start":1048,"line_end":1048,"column_start":27,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":225506,"byte_end":225515,"line_start":1111,"line_end":1111,"column_start":27,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":226903,"byte_end":226912,"line_start":1148,"line_end":1148,"column_start":21,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":228769,"byte_end":228778,"line_start":1198,"line_end":1198,"column_start":23,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\time.rs","byte_start":229541,"byte_end":229550,"line_start":1221,"line_end":1221,"column_start":23,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":249671,"byte_end":249684,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":272902,"byte_end":272915,"line_start":617,"line_end":617,"column_start":19,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1320},"to":{"krate":0,"index":1163}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":284079,"byte_end":284092,"line_start":935,"line_end":935,"column_start":19,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1320},"to":{"krate":0,"index":1182}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":290336,"byte_end":290349,"line_start":1107,"line_end":1107,"column_start":21,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":6364}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":292958,"byte_end":292971,"line_start":1169,"line_end":1169,"column_start":27,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":295565,"byte_end":295578,"line_start":1232,"line_end":1232,"column_start":27,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":296832,"byte_end":296845,"line_start":1268,"line_end":1268,"column_start":21,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":297940,"byte_end":297953,"line_start":1299,"line_end":1299,"column_start":23,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\naive\\datetime.rs","byte_start":298694,"byte_end":298707,"line_start":1321,"line_end":1321,"column_start":23,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1320},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":316490,"byte_end":316494,"line_start":54,"line_end":54,"column_start":20,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":324549,"byte_end":324553,"line_start":257,"line_end":257,"column_start":20,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":325263,"byte_end":325267,"line_start":274,"line_end":274,"column_start":33,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1343},"to":{"krate":0,"index":1163}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":326976,"byte_end":326980,"line_start":322,"line_end":322,"column_start":29,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327060,"byte_end":327064,"line_start":323,"line_end":323,"column_start":36,"column_end":40},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1386}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327169,"byte_end":327173,"line_start":325,"line_end":325,"column_start":60,"column_end":64},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327281,"byte_end":327285,"line_start":329,"line_end":329,"column_start":27,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327329,"byte_end":327333,"line_start":332,"line_end":332,"column_start":35,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327485,"byte_end":327489,"line_start":338,"line_end":338,"column_start":28,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1906}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327612,"byte_end":327616,"line_start":342,"line_end":342,"column_start":35,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":6364}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327743,"byte_end":327747,"line_start":346,"line_end":346,"column_start":41,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":327971,"byte_end":327975,"line_start":355,"line_end":355,"column_start":41,"column_end":45},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":328193,"byte_end":328197,"line_start":364,"line_end":364,"column_start":35,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\date.rs","byte_start":328371,"byte_end":328375,"line_start":370,"line_end":370,"column_start":37,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":329517,"byte_end":329525,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":334101,"byte_end":334109,"line_start":165,"line_end":165,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":335827,"byte_end":335835,"line_start":200,"line_end":200,"column_start":20,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":337207,"byte_end":337215,"line_start":230,"line_end":230,"column_start":33,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":1163}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":338946,"byte_end":338954,"line_start":277,"line_end":277,"column_start":33,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":1182}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":339930,"byte_end":339938,"line_start":305,"line_end":305,"column_start":29,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1394}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340018,"byte_end":340026,"line_start":306,"line_end":306,"column_start":36,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1386}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340135,"byte_end":340143,"line_start":308,"line_end":308,"column_start":64,"column_end":72},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340263,"byte_end":340271,"line_start":312,"line_end":312,"column_start":27,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340315,"byte_end":340323,"line_start":315,"line_end":315,"column_start":35,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340487,"byte_end":340495,"line_start":321,"line_end":321,"column_start":28,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1906}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340630,"byte_end":340638,"line_start":325,"line_end":325,"column_start":35,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":6364}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":340769,"byte_end":340777,"line_start":329,"line_end":329,"column_start":41,"column_end":49},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1442}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341013,"byte_end":341021,"line_start":338,"line_end":338,"column_start":41,"column_end":49},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":1447}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341251,"byte_end":341259,"line_start":347,"line_end":347,"column_start":35,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341433,"byte_end":341441,"line_start":353,"line_end":353,"column_start":37,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":341629,"byte_end":341637,"line_start":359,"line_end":359,"column_start":23,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":342837,"byte_end":342845,"line_start":386,"line_end":386,"column_start":23,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\datetime.rs","byte_start":343045,"byte_end":343053,"line_start":394,"line_end":394,"column_start":23,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1350},"to":{"krate":2,"index":5905}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362635,"byte_end":362650,"line_start":108,"line_end":108,"column_start":16,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362740,"byte_end":362755,"line_start":114,"line_end":114,"column_start":20,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362861,"byte_end":362876,"line_start":120,"line_end":120,"column_start":13,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":362902,"byte_end":362917,"line_start":123,"line_end":123,"column_start":21,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366379,"byte_end":366392,"line_start":209,"line_end":209,"column_start":16,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":2002}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366482,"byte_end":366495,"line_start":215,"line_end":215,"column_start":20,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":1882}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366599,"byte_end":366612,"line_start":221,"line_end":221,"column_start":13,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":1886}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":366638,"byte_end":366651,"line_start":224,"line_end":224,"column_start":21,"column_end":34},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":6707}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":369364,"byte_end":369374,"line_start":295,"line_end":295,"column_start":23,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":369494,"byte_end":369504,"line_start":301,"line_end":301,"column_start":16,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1516},"to":{"krate":1,"index":1537}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387279,"byte_end":387285,"line_start":127,"line_end":127,"column_start":18,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1553},"to":{"krate":2,"index":2026}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\parsed.rs","byte_start":387781,"byte_end":387787,"line_start":140,"line_end":140,"column_start":6,"column_end":12},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":488719,"byte_end":488732,"line_start":162,"line_end":162,"column_start":10,"column_end":23},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\strftime.rs","byte_start":489007,"byte_end":489020,"line_start":170,"line_end":170,"column_start":23,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1585},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":381689,"byte_end":381702,"line_start":539,"line_end":539,"column_start":46,"column_end":59},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\format\\mod.rs","byte_start":382470,"byte_end":382483,"line_start":554,"line_end":554,"column_start":63,"column_end":76},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1601},"to":{"krate":2,"index":6709}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":18846,"byte_end":18853,"line_start":433,"line_end":433,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":23110,"byte_end":23117,"line_start":546,"line_end":546,"column_start":37,"column_end":44},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1610},"to":{"krate":15,"index":154}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":23945,"byte_end":23950,"line_start":578,"line_end":578,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1163}},{"span":{"file_name":"C:\\Users\\jdevo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\chrono-0.3.0\\src\\lib.rs","byte_start":27775,"byte_end":27780,"line_start":683,"line_end":683,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1391},"to":{"krate":0,"index":1182}}]}